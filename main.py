import os
import ntpath

from dearpygui import core, simple
import pyperclip
from converter import Converter
control_window = simple.window("Control", x_pos=0, y_pos=0, height=800)
current_uid = 0
converter = Converter()


def _generate_text_window_unique_names(title):
    """
    Generates unique names for the text windows and widgets
    :param title: The original window title (will be modified to "title_#"
    :return: A array of unique IDs [window title, top copy button id, bottom copy button id]
    """
    global current_uid
    output_ids = [
        f"{title}_{str(current_uid)}",
        f"top_copy_btn_{str(current_uid)}",
        f"bottom_copy_btn_{str(current_uid)}"
    ]
    current_uid += 1
    return output_ids


def create_text_window(text, title):
    """
    Creates a text window. It's simply a window with some text. There are two copy to clipboard buttons. One above
    and one bellow the text.
    Use this to create a window containing a lot of text.
    :param text: text the window will contain
    :param title: the title of the window. It doesn't need to be unique since a unique number will be attributed to it
    :return: None
    """
    unique_ids = _generate_text_window_unique_names(title)
    with simple.window(unique_ids[0]):
        core.add_button(unique_ids[1], label="Copy to clipboard", callback=lambda source, data: pyperclip.copy(data),
                        callback_data=text)
        core.add_text(text)
        core.add_button(unique_ids[2], label="Copy to clipboard", callback=lambda source, data: pyperclip.copy(data),
                        callback_data=text)


def convert_file(sender, data):
    """
    Callback function, will convert the currently selected image.
    It works asynchronously by calling _convert_file using run_async_function. And once completed, calls
    _convert_file_return_callback to create the text window containing the OCR text gathered from the image.
    :param sender: The sender object (see dearpygui documentation)
    :param data: The data object (see dearpygui documentation)
    :return: None
    """
    file_path = core.get_data("file path")
    core.run_async_function(_convert_file, file_path, return_handler=_convert_file_return_callback)


def _convert_file(sender, file_path=""):
    """
    The async part of the convert_file function. It does the CPU intensive OCR work and returns the text generated.
    The path to an image can be provided or the image data itself
    :param sender: dearpygui sender object
    :param file_path: image path list ["path/to/directory", "file_name.png"]
    :param image_data: some image data
    :return: object containing the image path and image text {"image path": image_path, "image text": image_text}
    """
    pages = converter.convert_file(path=file_path)
    return file_path, pages


def _convert_file_return_callback(sender, data):
    """
    The UI synchronous part of the convert_file function. It takes the text generated by the async OCR function and
    displays it in a text window.
    :param sender: dearpygui sender object
    :param data: The data object should contain the image name and image text
    {"image path": file_path, "image text": image_text}
    :return: None
    """
    (file_path, pages) = data
    file_name = ntpath.basename(file_path)
    if pages is None:
        print("No file selected or file is of the wrong type.")
        return
    for page in pages:
        create_text_window(page, file_name)


def select_file(sender, data):
    """
    Sets the selected file path so it can be used later on.
    This sets a global variable containing the path to the currently select image. This image will be converted to
    text by OCR once the user presses the convert image button.
    :param sender: dearpygui sender object
    :param data: data should be the image path object of format ["path/to/directory", "file_name.png"]
    :return: None
    """
    global control_window
    core.add_data("file path", os.path.join(*data))
    core.set_value("file path", os.path.join(*data))
    core.set_value("file name", data[1])


"""
The main control window. This is where the user does most of the work. Selecting images and converting them.
It's also where all the app's settings are located.
"""
with control_window:
    # allow user to select image to convert
    core.add_text("Select an Image")
    core.add_button("Select file", callback=lambda *_: core.open_file_dialog(callback=select_file))
    core.add_button("Convert file", callback=convert_file)

    # display the selected image name
    core.add_text("Selected file:")
    core.add_text("...", source="file name")
    core.add_text("...", source="file path")

    # allows user to either save converted text to a window for clipboard access or save it to a file
    core.add_checkbox("save to file")

# core.start_dearpygui(primary_window="Control")
core.start_dearpygui()
